name: ci
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go:
          - '1.16'
          - '1.17'
          - '1.18'
          - '1.19'
        package:
          - ./
          - ./awss3v1/
          - ./awss3v2/
          - ./examples/
    env:
      GO111MODULE: on
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
      - name: Run go test
        run: |
          cd ${{ matrix.package }}
          go vet ./...
          go build ./...

          go test ./... \
            -v \
            -race -coverprofile=cover.out -covermode=atomic
      - name: Tidy check
        run: |
          cd ${{ matrix.package }}
          go mod tidy
          git diff --exit-code go.mod  # must be up-to-date and tidied
      - uses: codecov/codecov-action@v3
        if: matrix.package != './examples/'
        with:
          file: ${{ matrix.package }}cover.out
  mock:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
      - name: Generate mock
        run: |
          find . -name go.mod | while read gomod
          do
            (
              cd $(dirname ${gomod})
              pwd
              go generate ./...
              echo
            )
          done
      - name: Check diff
        run: git diff --exit-code
